/*
 * Created on 1 May 2014 ( Time 10:12:52 )
 * Generated by Telosys Tools Generator ( version 2.1.0 )
 */
// This Bean has a basic Primary Key (not composite) 

package com.researchermall.domain.jpa;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.math.BigDecimal;
import java.util.Date;

import javax.persistence.*;

/**
 * Persistent class for entity stored in table "td_algorithm"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="td_algorithm", catalog="community" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="TdAlgorithmEntity.countAll", query="SELECT COUNT(x) FROM TdAlgorithmEntity x" )
} )
public class TdAlgorithmEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="ID", nullable=false)
    private Integer    id           ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="Name", nullable=false, length=35)
    private String     name         ;

    @Column(name="Desc", length=200)
    private String     desc         ;

    @Column(name="CategoryId", nullable=false)
    private Integer    categoryid   ;

    @Column(name="Language", length=10)
    private String     language     ;

    @Column(name="Forsale")
    private Boolean    forsale      ;

    @Column(name="Available")
    private Boolean    available    ;

    @Column(name="CommunityId", nullable=false)
    private Integer    communityid  ;

    @Column(name="Status", nullable=false, length=2)
    private String     status       ;

    @Column(name="Tag", length=250)
    private String     tag          ;

    @Column(name="BasePrice")
    private BigDecimal baseprice    ;

    @Column(name="RetailPrice")
    private BigDecimal retailprice  ;

    @Lob
    @Column(name="FileCode", nullable=false)
    private byte[]     filecode     ;

    @Lob
    @Column(name="FileDoc", nullable=false)
    private byte[]     filedoc      ;

    @Column(name="SUID", length=6)
    private String     suid         ;

    @Column(name="Locked")
    private Boolean    locked       ;

    @Column(name="Version", length=35)
    private String     version      ;

    @Column(name="DownloadedTimes")
    private Integer    downloadedtimes ;

    @Column(name="FrontViewTimes")
    private Integer    frontviewtimes ;

    @Column(name="CreateBy", nullable=false)
    private Integer    createby     ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="CreateDate", nullable=false)
    private Date       createdate   ;

    @Column(name="UpdateBy")
    private Integer    updateby     ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="UpdateDate")
    private Date       updatedate   ;



    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------

    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public TdAlgorithmEntity() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setId( Integer id ) {
        this.id = id ;
    }
    public Integer getId() {
        return this.id;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : Name ( VARCHAR ) 
    public void setName( String name ) {
        this.name = name;
    }
    public String getName() {
        return this.name;
    }

    //--- DATABASE MAPPING : Desc ( VARCHAR ) 
    public void setDesc( String desc ) {
        this.desc = desc;
    }
    public String getDesc() {
        return this.desc;
    }

    //--- DATABASE MAPPING : CategoryId ( INT ) 
    public void setCategoryid( Integer categoryid ) {
        this.categoryid = categoryid;
    }
    public Integer getCategoryid() {
        return this.categoryid;
    }

    //--- DATABASE MAPPING : Language ( VARCHAR ) 
    public void setLanguage( String language ) {
        this.language = language;
    }
    public String getLanguage() {
        return this.language;
    }

    //--- DATABASE MAPPING : Forsale ( BIT ) 
    public void setForsale( Boolean forsale ) {
        this.forsale = forsale;
    }
    public Boolean getForsale() {
        return this.forsale;
    }

    //--- DATABASE MAPPING : Available ( BIT ) 
    public void setAvailable( Boolean available ) {
        this.available = available;
    }
    public Boolean getAvailable() {
        return this.available;
    }

    //--- DATABASE MAPPING : CommunityId ( INT ) 
    public void setCommunityid( Integer communityid ) {
        this.communityid = communityid;
    }
    public Integer getCommunityid() {
        return this.communityid;
    }

    //--- DATABASE MAPPING : Status ( CHAR ) 
    public void setStatus( String status ) {
        this.status = status;
    }
    public String getStatus() {
        return this.status;
    }

    //--- DATABASE MAPPING : Tag ( VARCHAR ) 
    public void setTag( String tag ) {
        this.tag = tag;
    }
    public String getTag() {
        return this.tag;
    }

    //--- DATABASE MAPPING : BasePrice ( DECIMAL UNSIGNED ) 
    public void setBaseprice( BigDecimal baseprice ) {
        this.baseprice = baseprice;
    }
    public BigDecimal getBaseprice() {
        return this.baseprice;
    }

    //--- DATABASE MAPPING : RetailPrice ( DECIMAL UNSIGNED ) 
    public void setRetailprice( BigDecimal retailprice ) {
        this.retailprice = retailprice;
    }
    public BigDecimal getRetailprice() {
        return this.retailprice;
    }

    //--- DATABASE MAPPING : FileCode ( BLOB ) 
    public void setFilecode( byte[] filecode ) {
        this.filecode = filecode;
    }
    public byte[] getFilecode() {
        return this.filecode;
    }

    //--- DATABASE MAPPING : FileDoc ( BLOB ) 
    public void setFiledoc( byte[] filedoc ) {
        this.filedoc = filedoc;
    }
    public byte[] getFiledoc() {
        return this.filedoc;
    }

    //--- DATABASE MAPPING : SUID ( VARCHAR ) 
    public void setSuid( String suid ) {
        this.suid = suid;
    }
    public String getSuid() {
        return this.suid;
    }

    //--- DATABASE MAPPING : Locked ( BIT ) 
    public void setLocked( Boolean locked ) {
        this.locked = locked;
    }
    public Boolean getLocked() {
        return this.locked;
    }

    //--- DATABASE MAPPING : Version ( VARCHAR ) 
    public void setVersion( String version ) {
        this.version = version;
    }
    public String getVersion() {
        return this.version;
    }

    //--- DATABASE MAPPING : DownloadedTimes ( INT UNSIGNED ) 
    public void setDownloadedtimes( Integer downloadedtimes ) {
        this.downloadedtimes = downloadedtimes;
    }
    public Integer getDownloadedtimes() {
        return this.downloadedtimes;
    }

    //--- DATABASE MAPPING : FrontViewTimes ( INT UNSIGNED ) 
    public void setFrontviewtimes( Integer frontviewtimes ) {
        this.frontviewtimes = frontviewtimes;
    }
    public Integer getFrontviewtimes() {
        return this.frontviewtimes;
    }

    //--- DATABASE MAPPING : CreateBy ( INT ) 
    public void setCreateby( Integer createby ) {
        this.createby = createby;
    }
    public Integer getCreateby() {
        return this.createby;
    }

    //--- DATABASE MAPPING : CreateDate ( TIMESTAMP ) 
    public void setCreatedate( Date createdate ) {
        this.createdate = createdate;
    }
    public Date getCreatedate() {
        return this.createdate;
    }

    //--- DATABASE MAPPING : UpdateBy ( INT ) 
    public void setUpdateby( Integer updateby ) {
        this.updateby = updateby;
    }
    public Integer getUpdateby() {
        return this.updateby;
    }

    //--- DATABASE MAPPING : UpdateDate ( DATETIME ) 
    public void setUpdatedate( Date updatedate ) {
        this.updatedate = updatedate;
    }
    public Date getUpdatedate() {
        return this.updatedate;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------

    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(id);
        sb.append("]:"); 
        sb.append(name);
        sb.append("|");
        sb.append(desc);
        sb.append("|");
        sb.append(categoryid);
        sb.append("|");
        sb.append(language);
        sb.append("|");
        sb.append(forsale);
        sb.append("|");
        sb.append(available);
        sb.append("|");
        sb.append(communityid);
        sb.append("|");
        sb.append(status);
        sb.append("|");
        sb.append(tag);
        sb.append("|");
        sb.append(baseprice);
        sb.append("|");
        sb.append(retailprice);
        // attribute 'filecode' not usable (type = byte[])
        // attribute 'filedoc' not usable (type = byte[])
        sb.append("|");
        sb.append(suid);
        sb.append("|");
        sb.append(locked);
        sb.append("|");
        sb.append(version);
        sb.append("|");
        sb.append(downloadedtimes);
        sb.append("|");
        sb.append(frontviewtimes);
        sb.append("|");
        sb.append(createby);
        sb.append("|");
        sb.append(createdate);
        sb.append("|");
        sb.append(updateby);
        sb.append("|");
        sb.append(updatedate);
        return sb.toString(); 
    } 

}
