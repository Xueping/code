/*
 * Created on 24 Apr 2014 ( Time 16:20:35 )
 * Generated by Telosys Tools Generator ( version 2.1.0 )
 */
// This Bean has a basic Primary Key (not composite) 

package com.researchermall.bean;

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.IdClass;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Persistent class for entity stored in table "td_beneficiary"
 *
 * @author Xueping Peng
 *
 */

@Entity
@Table(name="td_beneficiary"/* , catalog="community"*/ )
@IdClass(BeneficiaryId.class)
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="BeneficiaryEntity.countAll", query="SELECT COUNT(x) FROM BeneficiaryEntity x" )
} )
public class BeneficiaryEntity{



    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Id
    private Integer    algorid      ;

    @Id
    private Integer    userid       ;

    @Column(name="SharePercent", nullable=false)
    private float    sharepercent ;

    @Column(name="ListOrder", nullable=false)
    private Integer    listorder    ;

    @Column(name="CreateBy", nullable=false)
    private Integer    createby     ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="CreateDate", nullable=false, insertable=false)
    private Date       createdate   ;

    @Column(name="UpdateBy")
    private Integer    updateby     ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="UpdateDate")
    private Date       updatedate   ;



    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
    @ManyToOne
    @JoinColumn(name = "userid", updatable = false, insertable = false, referencedColumnName = "id")
    private UserEntity user;
    
    @ManyToOne
    @JoinColumn(name = "algorid", updatable = false, insertable = false, referencedColumnName = "id")
    private AlgorithmEntity algorithm;
    

    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public BeneficiaryEntity() {
		super();
    }
    

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : AlgorId ( INT ) 
    public void setAlgorid( Integer algorid ) {
        this.algorid = algorid;
    }
    public Integer getAlgorid() {
        return this.algorid;
    }

    //--- DATABASE MAPPING : UserId ( INT ) 
    public void setUserid( Integer userid ) {
        this.userid = userid;
    }
    public Integer getUserid() {
        return this.userid;
    }

    //--- DATABASE MAPPING : SharePercent ( INT ) 
    public void setSharepercent( float sharepercent ) {
        this.sharepercent = sharepercent;
    }
    public float getSharepercent() {
        return this.sharepercent;
    }

    //--- DATABASE MAPPING : ListOrder ( INT ) 
    public void setListorder( Integer listorder ) {
        this.listorder = listorder;
    }
    public Integer getListorder() {
        return this.listorder;
    }

    //--- DATABASE MAPPING : CreateBy ( INT ) 
    public void setCreateby( Integer createby ) {
        this.createby = createby;
    }
    public Integer getCreateby() {
        return this.createby;
    }

    //--- DATABASE MAPPING : CreateDate ( TIMESTAMP ) 
    public void setCreatedate( Date createdate ) {
        this.createdate = createdate;
    }
    public Date getCreatedate() {
        return this.createdate;
    }

    //--- DATABASE MAPPING : UpdateBy ( INT ) 
    public void setUpdateby( Integer updateby ) {
        this.updateby = updateby;
    }
    public Integer getUpdateby() {
        return this.updateby;
    }

    //--- DATABASE MAPPING : UpdateDate ( DATETIME ) 
    public void setUpdatedate( Date updatedate ) {
        this.updatedate = updatedate;
    }
    public Date getUpdatedate() {
        return this.updatedate;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------

    public UserEntity getUser() {
		return user;
	}


	public void setUser(UserEntity user) {
		this.user = user;
	}


	public AlgorithmEntity getAlgorithm() {
		return algorithm;
	}


	public void setAlgorithm(AlgorithmEntity algorithm) {
		this.algorithm = algorithm;
	}


	//----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer();  
        sb.append(algorid);
        sb.append("|");
        sb.append(userid);
        sb.append("|");
        sb.append(sharepercent);
        sb.append("|");
        sb.append(listorder);
        sb.append("|");
        sb.append(createby);
        sb.append("|");
        sb.append(createdate);
        sb.append("|");
        sb.append(updateby);
        sb.append("|");
        sb.append(updatedate);
        return sb.toString(); 
    } 

}
